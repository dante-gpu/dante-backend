package models

import (
	"time"
)

// Job represents a compute job submitted to the platform.
// This structure is expected to be received from a NATS message.
// It should align with what api-gateway publishes.
type Job struct {
	ID          string    `json:"job_id"`  // Unique ID for the job (generated by api-gateway)
	UserID      string    `json:"user_id"` // ID of the user who submitted the job
	Type        string    `json:"type"`    // Type of job (e.g., "ai-training", "data-processing")
	Name        string    `json:"name"`    // User-defined name for the job
	Description string    `json:"description,omitempty"`
	Priority    int       `json:"priority,omitempty"` // Job priority
	SubmittedAt time.Time `json:"submitted_at"`       // Timestamp from api-gateway

	// Resource Requirements
	GPUType  string `json:"gpu_type,omitempty"`  // Specific GPU model or class required (e.g., "nvidia-a100", "any-rtx")
	GPUCount int    `json:"gpu_count,omitempty"` // Number of GPUs required
	// Other requirements like min_vram_mb, cpu_cores, memory_gb could be added

	Params map[string]interface{} `json:"params"` // Job-specific parameters (e.g., script path, dataset URI, hyperparameters)
	Tags   []string               `json:"tags,omitempty"`
}

// SchedulerJobState represents the internal state of a job being managed by the scheduler.
// This is distinct from the ProviderStatus.
type SchedulerJobState string

const (
	JobStatePending    SchedulerJobState = "pending"    // Received, waiting for scheduling
	JobStateSearching  SchedulerJobState = "searching"  // Actively looking for a provider
	JobStateAssigning  SchedulerJobState = "assigning"  // Provider found, attempting to dispatch
	JobStateDispatched SchedulerJobState = "dispatched" // Task sent to provider daemon
	JobStateRunning    SchedulerJobState = "running"    // Provider daemon confirmed job start
	JobStateCompleted  SchedulerJobState = "completed"  // Job finished successfully
	JobStateFailed     SchedulerJobState = "failed"     // Job failed
	JobStateCancelled  SchedulerJobState = "cancelled"  // Job was cancelled
)

// InternalJobRepresentation holds the job details along with its current state and assignment info.
type InternalJobRepresentation struct {
	JobDetails Job               `json:"job_details"`
	State      SchedulerJobState `json:"state"`
	ProviderID string            `json:"provider_id,omitempty"` // ID of the provider assigned to this job
	Attempts   int               `json:"attempts"`              // Number of scheduling attempts
	LastError  string            `json:"last_error,omitempty"`
	ReceivedAt time.Time         `json:"received_at"` // When the scheduler received it
	UpdatedAt  time.Time         `json:"updated_at"`
}

func NewInternalJob(job Job) *InternalJobRepresentation {
	now := time.Now().UTC()
	return &InternalJobRepresentation{
		JobDetails: job,
		State:      JobStatePending,
		Attempts:   0,
		ReceivedAt: now,
		UpdatedAt:  now,
	}
}
