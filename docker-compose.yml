version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: dante-postgres
    environment:
      POSTGRES_DB: dante
      POSTGRES_USER: dante
      POSTGRES_PASSWORD: dante123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dante"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NATS Server with JetStream
  nats:
    image: nats:latest
    container_name: dante-nats
    command: ["-js", "-m", "8222"]
    ports:
      - "4222:4222"
      - "8222:8222"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Consul Service Discovery
  consul:
    image: hashicorp/consul:1.15
    container_name: dante-consul
    command: consul agent -dev -client=0.0.0.0 -ui
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: dante-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: dante
      MINIO_ROOT_PASSWORD: dante123456
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (for caching and rate limiting)
  redis:
    image: redis:7-alpine
    container_name: dante-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  minio_data:

networks:
  default:
    name: dante-network
